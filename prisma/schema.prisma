generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id        String    @id @default(uuid())
  name      String
  document  String    @unique
  email     String    @unique
  phone     String    @unique
  birthDate DateTime
  password  String
  role      UserRole
  status    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  userTokens UserToken[]
  settings   Setting[]

  @@map("users")
}

model UserToken {
  id        String    @id @default(uuid())
  userId    String
  token     String    @unique @db.Uuid
  code      String
  usage     Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  user User @relation(fields: [userId], references: [id])

  @@map("users_tokens")
}

model File {
  id          String    @id @default(cuid())
  key         String
  name        String
  contentType String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  @@map("files")
}

model Setting {
  id              String    @id @default(uuid())
  userId          String    @map("user_id")
  fieldName       String    @map("field_name")
  isFieldEnable   Boolean   @map("is_field_enable")
  isFieldRequired Boolean   @map("is_field_required")
  title           String
  description     String
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  deletedAt       DateTime? @map("deleted_at")

  User User @relation(fields: [userId], references: [id])

  @@map("settings")
}
